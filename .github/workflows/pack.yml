name: Build and tests

on:
  workflow_dispatch:
  push:
    branches: ["master"]
    paths: ["src/**"]

# env:
#   Hangfire_Cockroach_DatabaseName: defaultdb
#   Hangfire_Cockroach_SchemaName: hangfire
#   Hangfire_Cockroach_ConnectionStringTemplate: "Host=localhost; Port=26257; Database=defaultdb; SSL Mode=disable;Include Error Detail=true"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore -c Release
      - name: Pack
        run: dotnet pack -c Release --no-build --output publish
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: Package
          path: publish/**.nupkg

  test:
    permissions: write-all
    runs-on: ubuntu-latest

 
    # services:
    #   cockroachdb:
    #     image: cockroachdb/cockroach
    #     env:
    #       TZ: UTC
    #     options: >-
    #       start-single-node
    #       --insecure
    #       --listen-addr=localhost:26257
    #       --http-addr=localhost:8080
    #       --logtostderr
    #     ports:
    #       - 26257:26257
    #       - 8080:8080
    #     volumes:
    #       - "${PWD}/cockroach-data/crdb:/cockroach/cockroach-data"

    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Start a single CockroachDB instance
        run: |
            docker pull cockroachdb/cockroach
            docker run -d --name roach --hostname roach -p 26257:26257 -p 8080:8080 --env COCKROACH_USER=guest --env COCKROACH_PASSWORD=guest cockroachdb/cockroach start-single-node --insecure
            sudo apt update && sudo apt install wait-for-it -y
            wait-for-it -h localhost -p 26257
            #docker exec roach bash -c "echo 'CREATE DATABASE sequelize_test;' | $CONTAINER_ENTRYPOINT sql --insecure"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: |
            echo $Hangfire_Cockroach_DatabaseName
            echo $Hangfire_Cockroach_SchemaName
            echo $Hangfire_Cockroach_ConnectionStringTemplate
            dotnet test -c Release --no-build --verbosity normal --logger "trx;LogFileName=TestResults.trx" || true
        env:
          Hangfire_Cockroach_DatabaseName: defaultdb
          Hangfire_Cockroach_SchemaName: hangfire
          Hangfire_Cockroach_ConnectionStringTemplate: "Host=localhost; Port=26257; Database=defaultdb;  Username=guest; Password=guest; Include Error Detail=true"

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test results
          path: "**/TestResults.trx"
          reporter: dotnet-trx
          fail-on-error: true
